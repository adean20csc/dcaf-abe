---
- name: install updates
  yum:
    name: "*"
    state: latest
  ignore_errors: true

- name: install support packages
  yum:
    pkg: "{{ item }}"
    state: present
  with_items:
    - ntp
    - vim
    - dhcp
    - wget
    - docker
    - python-pip
    - python-passlib
    - sshpass
    - iptables-services
    - bridge-utils

- name: install docker-py
  pip:
    name: docker-py
    state: present
    extra_args: "--upgrade"

- name: create .ssh directory
  file:
    path: /root/.ssh/
    state: directory

- name: Create SSH Key Pair for root user
  user:
    name: root
    generate_ssh_key: yes

- name: copy .ssh/config
  copy:
    src: config
    dest: /root/.ssh/config
    mode: 0600

- name: Retrieve deployment node public key
  shell: cat /root/.ssh/id_rsa.pub
  register: pub_key

- name: Add deployment node SSH key to node authorized users
  authorized_key:
    user: root
    key: "{{ pub_key.stdout }}"

- name: disable firewalld
  service:
    name: firewalld
    state: stopped
    enabled: no

- name: create directories for hanlon
  file:
    path: "{{ item }}"
    state: directory
    setype: svirt_sandbox_file_t
    recurse: true
  with_items:
    - /opt/hanlon
    - /opt/hanlon/image
    - /opt/deploy

- name: Set the correct timezone
  file:
    src: /usr/share/zoneinfo/{{ ntp_timezone }}
    dest: /etc/localtime
    state: link
    force: yes

- name: Configure NTP
  lineinfile:
    backup: yes
    dest: /etc/ntp.conf
    line: "restrict default limited kod nomodify notrap nopeer noquery"
    state: present

- name: copy iptables config file
  copy:
    src: iptables
    dest: /etc/sysconfig/iptables

- name: start & enable services
  service:
    name: "{{ item }}"
    enabled: yes
    state: started
  with_items:
    - iptables
    - ntpd
    - docker

- name: get latest tags
  uri:
    url: "{{ item.tag }}"
    method: GET
  with_items: git_repos
  register: tags

- name: clone repos from git
  git:
    repo: "{{ item.item.repo }}"
    dest: "/root/{{ item.item.name }}"
    accept_hostkey: yes
    version: "{{ item.json[0].name }}"
  ignore_errors: true
  with_items: tags.results
